-------------------------------------------------------------------------------------------------------------------------------------------
EN | The UBF programming language has both standard BF commands and others such as the conditional statement and modules.
-------------------------------------------------------------------------------------------------------------------------------------------
Imagine you have a tape 30,000 cells long.
Using the commands < (Move one cell left) and > (Move one cell right) you can position the caret on a specific cell.
Using the commands + (Increase cell value by 1) and - (Decrease cell value by 1)
you can change the value of the cell on which the carriage is located.
The language contains commands for entering the value of the current cell (,) and outputting it (.).
With loops ([...]), you can perform the action enclosed in [] as long as the value of the current cell is not zero.
The action enclosed in {} will be executed if the cell value is not zero.
-------------------------------------------------------------------------------------------------------------------------------------------
Modules:
-------------------------------------------------------------------------------------------------------------------------------------------
Modules are files in which code can be called for execution from any other file. The modules are located in the "modules" folder.
You can create a module by creating a file with the extension ".mubf" (Module of UBF) and write your code into it, then save the file.
The module name must not include dots, backslashes, or characters that cannot appear in a file name.
You can also create a module from a program file.
To do this, you need to declare the module on a new line and on the lines following it, inserting a % sign at the beginning of the line,
and write code for the module. You must put a % sign at the beginning of each line of code for a module.
You can call the module code in any file, anywhere in the code.
To do this, you need to write "@module_name;" in the right place in the code (without quotes).
-------------------------------------------------------------------------------------------------------------------------------------------
File system:
-------------------------------------------------------------------------------------------------------------------------------------------
interpreter.pas is the file that executes your code.
run.txt is a file in which you can write the name of the file you need to run.
code.ubf is a standard code execution file, you can replace it with another at any time
by creating a new one in the folder with the interpreter and in run.txt write the name of this file instead of code.ubf
documentation.txt - documentation file
modules - folder with modules
-------------------------------------------------------------------------------------------------------------------------------------------